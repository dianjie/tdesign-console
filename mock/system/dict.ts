import type { MockMethod } from 'vite-plugin-mock';

const parentList = [
  {
    id: '1123598814738675201',
    parentId: '0',
    code: 'sex',
    dictKey: '-1',
    dictValue: '性别',
    sort: 1,
    remark: '',
    isSealed: 0,
    isDeleted: 0,
    parentName: '顶级',
    hasChildren: false,
  },
];
const childList = [
  {
    id: '1123598814738675202',
    parentId: '1123598814738675201',
    code: 'sex',
    dictKey: '1',
    dictValue: '男',
    sort: 1,
    remark: '',
    isSealed: 0,
    isDeleted: 0,
    parentName: '性别',
    hasChildren: false,
  },
  {
    id: '1123598814738675203',
    parentId: '1123598814738675201',
    code: 'sex',
    dictKey: '2',
    dictValue: '女',
    sort: 2,
    remark: '',
    isSealed: 0,
    isDeleted: 0,
    parentName: '性别',
    hasChildren: false,
  },
];

const fullList = [...parentList, ...childList];

export default [
  {
    url: '/api/blade-system/dict/dictionary',
    method: 'get',
    response: ({ query }) => {
      const { code } = query;
      const dataConfig = {
        flow: [
          {
            id: '1123598814738675222',
            parentId: '1123598814738675221',
            code: 'flow',
            dictKey: '1',
            dictValue: '请假流程',
            sort: 1,
            remark: 'leave',
            isSealed: -1,
            isDeleted: -1,
          },
          {
            id: '1123598814738675223',
            parentId: '1123598814738675221',
            code: 'flow',
            dictKey: '2',
            dictValue: '报销流程',
            sort: 2,
            remark: 'expense',
            isSealed: -1,
            isDeleted: -1,
          },
        ],
        user_type: [
          {
            id: '1123598814738778201',
            parentId: '1123598814738778200',
            code: 'user_type',
            dictKey: '1',
            dictValue: 'WEB',
            sort: 1,
            remark: '',
            isSealed: -1,
            isDeleted: -1,
          },
          {
            id: '1123598814738778202',
            parentId: '1123598814738778200',
            code: 'user_type',
            dictKey: '2',
            dictValue: 'APP',
            sort: 2,
            remark: '',
            isSealed: -1,
            isDeleted: -1,
          },
          {
            id: '1123598814738778203',
            parentId: '1123598814738778200',
            code: 'user_type',
            dictKey: '3',
            dictValue: 'OTHER',
            sort: 3,
            remark: '',
            isSealed: -1,
            isDeleted: -1,
          },
        ],
        sex: [
          {
            code: 'sex',
            dictKey: '1',
            dictValue: '男',
            hasChildren: false,
            id: '1123598814738675202',
            isDeleted: 0,
            isSealed: 0,
            parentId: '1123598814738675201',
            parentName: '',
            remark: '',
            sort: 1,
          },
          {
            code: 'sex',
            dictKey: '2',
            dictValue: '女',
            hasChildren: false,
            id: '1123598814738675203',
            isDeleted: 0,
            isSealed: 0,
            parentId: '1123598814738675201',
            parentName: '',
            remark: '',
            sort: 2,
          },
        ],
        org_category: [
          {
            id: '1123598814738675228',
            parentId: '1123598814738675227',
            code: 'org_category',
            dictKey: '1',
            dictValue: '公司',
            sort: 1,
            remark: '',
            isSealed: -1,
            isDeleted: -1,
          },
          {
            id: '1123598814738675229',
            parentId: '1123598814738675227',
            code: 'org_category',
            dictKey: '2',
            dictValue: '部门',
            sort: 2,
            remark: '',
            isSealed: -1,
            isDeleted: -1,
          },
          {
            id: '1123598814738675230',
            parentId: '1123598814738675227',
            code: 'org_category',
            dictKey: '3',
            dictValue: '小组',
            sort: 3,
            remark: '',
            isSealed: -1,
            isDeleted: -1,
          },
        ],
        post_category: [
          {
            id: '1123598814738777221',
            parentId: '1123598814738777220',
            code: 'post_category',
            dictKey: '1',
            dictValue: '高层',
            sort: 1,
            remark: '',
            isSealed: -1,
            isDeleted: -1,
          },
          {
            id: '1123598814738777222',
            parentId: '1123598814738777220',
            code: 'post_category',
            dictKey: '2',
            dictValue: '中层',
            sort: 2,
            remark: '',
            isSealed: -1,
            isDeleted: -1,
          },
          {
            id: '1123598814738777223',
            parentId: '1123598814738777220',
            code: 'post_category',
            dictKey: '3',
            dictValue: '基层',
            sort: 3,
            remark: '',
            isSealed: -1,
            isDeleted: -1,
          },
          {
            id: '1123598814738777224',
            parentId: '1123598814738777220',
            code: 'post_category',
            dictKey: '4',
            dictValue: '其他',
            sort: 4,
            remark: '',
            isSealed: -1,
            isDeleted: -1,
          },
        ],
      };
      return {
        code: 200,
        success: true,
        data: dataConfig[code] || [],
        msg: '操作成功',
      };
    },
  },
  {
    url: '/api/blade-system/dict/parent-list',
    method: 'get',
    response: () => {
      return {
        code: 200,
        success: true,
        data: {
          records: parentList,
          total: 1,
          size: 10,
          current: 1,
          orders: [],
          optimizeCountSql: true,
          searchCount: true,
          countId: '',
          maxLimit: -1,
          pages: 1,
        },
        msg: '操作成功',
      };
    },
  },
  {
    url: '/api/blade-system/dict/child-list',
    method: 'get',
    response: () => {
      return {
        code: 200,
        success: true,
        data: childList,
        msg: '操作成功',
      };
    },
  },
  {
    url: '/api/blade-system/dict/detail',
    method: 'get',
    response: ({ query }) => {
      const { id } = query;
      return {
        code: 200,
        success: true,
        data: fullList.find((item) => item.id === id) || {},
        msg: '操作成功',
      };
    },
  },
] as MockMethod[];
