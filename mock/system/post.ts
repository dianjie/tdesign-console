import type { MockMethod } from 'vite-plugin-mock';

const postList = [
  {
    id: '1123598817738675201',
    createUser: '1123598821738675201',
    createDept: '1123598813738675201',
    createTime: '2020-04-01 00:00:00',
    updateUser: '1123598821738675201',
    updateTime: '2020-04-01 00:00:00',
    status: 1,
    isDeleted: 0,
    tenantId: '000000',
    category: 1,
    postCode: 'ceo',
    postName: '首席执行官',
    sort: 1,
    remark: '总经理',
  },
  {
    id: '1123598817738675202',
    createUser: '1123598821738675201',
    createDept: '1123598813738675201',
    createTime: '2020-04-01 00:00:00',
    updateUser: '1123598821738675201',
    updateTime: '2020-04-01 00:00:00',
    status: 1,
    isDeleted: 0,
    tenantId: '000000',
    category: 1,
    postCode: 'coo',
    postName: '首席运营官',
    sort: 2,
    remark: '常务总经理',
  },
  {
    id: '1123598817738675203',
    createUser: '1123598821738675201',
    createDept: '1123598813738675201',
    createTime: '2020-04-01 00:00:00',
    updateUser: '1123598821738675201',
    updateTime: '2020-04-01 00:00:00',
    status: 1,
    isDeleted: 0,
    tenantId: '000000',
    category: 1,
    postCode: 'cfo',
    postName: '首席财务官',
    sort: 3,
    remark: '财务总经理',
  },
  {
    id: '1123598817738675204',
    createUser: '1123598821738675201',
    createDept: '1123598813738675201',
    createTime: '2020-04-01 00:00:00',
    updateUser: '1123598821738675201',
    updateTime: '2020-04-01 00:00:00',
    status: 1,
    isDeleted: 0,
    tenantId: '000000',
    category: 1,
    postCode: 'cto',
    postName: '首席技术官',
    sort: 4,
    remark: '技术总监',
  },
  {
    id: '1123598817738675205',
    createUser: '1123598821738675201',
    createDept: '1123598813738675201',
    createTime: '2020-04-01 00:00:00',
    updateUser: '1123598821738675201',
    updateTime: '2020-04-01 00:00:00',
    status: 1,
    isDeleted: 0,
    tenantId: '000000',
    category: 1,
    postCode: 'cio',
    postName: '首席信息官',
    sort: 5,
    remark: '信息总监',
  },
  {
    id: '1123598817738675206',
    createUser: '1123598821738675201',
    createDept: '1123598813738675201',
    createTime: '2020-04-01 00:00:00',
    updateUser: '1123598821738675201',
    updateTime: '2020-04-01 00:00:00',
    status: 1,
    isDeleted: 0,
    tenantId: '000000',
    category: 2,
    postCode: 'pm',
    postName: '技术经理',
    sort: 6,
    remark: '研发和产品是永远的朋友',
  },
  {
    id: '1123598817738675207',
    createUser: '1123598821738675201',
    createDept: '1123598813738675201',
    createTime: '2020-04-01 00:00:00',
    updateUser: '1123598821738675201',
    updateTime: '2020-04-01 00:00:00',
    status: 1,
    isDeleted: 0,
    tenantId: '000000',
    category: 2,
    postCode: 'hrm',
    postName: '人力经理',
    sort: 7,
    remark: '人力资源部门工作管理者',
  },
  {
    id: '1123598817738675208',
    createUser: '1123598821738675201',
    createDept: '1123598813738675201',
    createTime: '2020-04-01 00:00:00',
    updateUser: '1123598821738675201',
    updateTime: '2020-04-01 00:00:00',
    status: 1,
    isDeleted: 0,
    tenantId: '000000',
    category: 3,
    postCode: 'staff',
    postName: '普通员工',
    sort: 8,
    remark: '普通员工',
  },
];

export default [
  {
    url: '/api/blade-system/post/select',
    method: 'get',
    response: () => {
      return {
        code: 200,
        success: true,
        data: postList,
        msg: '操作成功',
      };
    },
  },
  {
    url: '/api/blade-system/post/list',
    method: 'get',
    response: () => {
      return {
        code: 200,
        success: true,
        data: {
          records: postList,
          total: 8,
          size: 10,
          current: 1,
          orders: [],
          optimizeCountSql: true,
          searchCount: true,
          countId: '',
          maxLimit: -1,
          pages: 1,
        },
        msg: '操作成功',
      };
    },
  },
  {
    url: '/api/blade-system/post/detail',
    method: 'get',
    response: ({ query }) => {
      const { id } = query;
      return {
        code: 200,
        success: true,
        data: postList.find((item) => item.id === id) || {},
        msg: '操作成功',
      };
    },
  },
] as MockMethod[];
